1) Прочитать про клиент-серверную архитектуру.  -  
Вычислительная или сетевая архитектура, в которой задания или сетевая нагрузка распределены между поставщиками услуг, называемыми серверами, и заказчиками услуг, называемыми клиентами. Фактически клиент и сервер — это программное обеспечение.

2) Что ткое HTTP и HTTPS  -  
HTTP – протокол передачи данных, изначально предназначенный для гипертекстовых документов, то есть документов, которые могут содержать ссылки, позволяющие организовать переход к другим документам. Аббревиатура HTTP расшифровывается как HyperText Transfer Protocol, «протокол передачи гипертекста».
Также HTTP часто используется как протокол передачи информации для других протоколов прикладного уровня, таких как SOAP, XML-RPC и WebDAV. В таком случае говорят, что протокол HTTP используется как «транспорт». API многих программных продуктов также подразумевает использование HTTP для передачи данных – сами данные при этом могут иметь любой формат, например, XML или JSON. Как правило, передача данных по протоколу HTTP осуществляется через TCP/IP-соединения. Серверное программное обеспечение при этом обычно использует TCP-порт 80 (и, если порт не указан явно, то обычно клиентское программное обеспечение по умолчанию использует именно 80-й порт для открываемых HTTP-соединений), хотя может использовать и любой другой.
Сам по себе протокол HTTP не предполагает использование шифрования для передачи информации. Тем не менее, для HTTP есть распространённое расширение, которое реализует упаковку передаваемых данных в криптографический протокол SSL или TLS.
Название этого расширения – HTTPS (HyperText Transfer Protocol Secure). Для HTTPS-соединений обычно используется TCP-порт 443. HTTPS широко используется для защиты информации от перехвата, а также, как правило, обеспечивает защиту от атак вида man-in-the-middle — в том случае, если сертификат проверяется на клиенте, и при этом приватный ключ сертификата не был скомпрометирован, пользователь не подтверждал использование неподписанного сертификата, и на компьютере пользователя не были внедрены сертификаты центра сертификации злоумышленника.
HTTPS (Hypertext Transport Protocol Secure) – это протокол, который обеспечивает конфиденциальность обмена данными между сайтом и пользовательским устройством. Безопасность информации обеспечивается за счет использования криптографических протоколов SSL/TLS, имеющих 3 уровня защиты:
1.Шифрование данных позволяет избежать их перехвата;
2.Сохранность данных – любое изменение данных фиксируется;
3.Аутентификация защищает от перенаправления пользователя.

3) HTTP методы  -  
Метод (в англоязычной тематической литературе используется слово method, а также иногда слово verb – «глагол») представляет собой последовательность из любых символов, кроме управляющих и разделителей, и определяет операцию, которую нужно осуществить с указанным ресурсом. Спецификация HTTP 1.1 не ограничивает количество разных методов, которые могут быть использованы, однако в целях соответствия общим стандартам и сохранения совместимости с максимально широким спектром программного обеспечения как правило используются лишь некоторые, наиболее стандартные методы, смысл которых однозначно раскрыт в спецификации протокола.

GET – получение ресурса;
POST – создание ресурса;
PUT – обновление ресурса;
DELETE – удаление ресурса.

4) HTTP статус коды сервера  -  
HTTPS Status Codes — это стандартизированные коды, которые веб-сервер возвращает в ответ на HTTP-запросы сетевых клиентов. Они помогают понять статус: было ли соединение успешным или такой страницы не существует, есть ли перенаправление или превышен таймаут. Представляют собой целое трёхразрядное десятичное число. Первая цифра указывает на класс состояния.

5) Что такое ядро браузера  -  
Ядро браузера можно разделить на две части: движок рендеринга (инженер макета или движок рендеринга) и движок JS. Он отвечает за получение содержимого веб-страницы (HTML, XML, изображения и т. Д.), Организацию информации (например, добавление CSS и т. Д.) И расчет режима отображения веб-страницы, а затем вывод ее на монитор или принтер. Разные ядра браузеров по-разному интерпретируют синтаксис записи веб-страниц, поэтому эффект рендеринга (отображения) одной и той же веб-страницы в браузерах разных ядер также может быть различным. Именно поэтому авторам веб-страниц необходимо тестировать веб-страницы в браузерах разных ядер. Обычные ядра браузера можно разделить на эти пять типов: Trident, Gecko, Presto, Webkit, Blink.

6) Какие браузеры какиие ядра используют  - 
WebKit - Safari
Gecko - Mozilla
Blink - Chrome, Chromium, Edge

7) Что такое API  -  
Application Programming Interface или интерфейс программирования приложений — это совокупность инструментов и функций в виде интерфейса для создания новых приложений, благодаря которому одна программа будет взаимодействовать с другой. Это позволяет разработчикам расширять функциональность своего продукта и связывать его с другими.

8) Что такое ендпоинты  - 
Представляет собой некий шлюз, который соединяет серверные процессы приложения с внешним интерфейсом. Простыми словами, это адрес, на который отправляются сообщения. Эндпоинты работают вместе с методами API. Это определенные URL-адреса, которые приложение использует для связи со сторонними службами и своими пользователями. URL — это роут, который может обрабатывать разные методы запроса. Каждый тип запроса — это отдельный эндпоинт.

9) URL (URI, URL, URN)  - 
URL - Uniform Resource Locator (унифицированный определитель местонахождения ресурса). URL определяет местонахождение ресурса в сети и способ его (ресурса) извлечения.
URN - Unifrorm Resource Name (унифицированное имя ресурса). Неизменяемая последовательность символов определяющая только имя некоторого ресурса. Смысл URN в том, что им единоразово и уникально именуется какая-либо сущность в рамках конкретного пространства имен (контекста). Таким образом, URN способен преодолеть недостаток URL связанный с возможным будущим изменением и перемещением ссылок.
URI - Uniform Resource Identifier (унифицированный идентификатор ресурса). Обобщенное понятие (множество) идентификации ресурса, включающее в нашем случае как URL, так и URN, как по отдельности, так и совместно. Т.е. мы можем считать, что: URI = URL или URI = URN или URI = URL + URN.

10) Идемпотентные HTTP методы  - 
Метод запроса считается "идемпотентным", если предполагаемый эффект на сервере нескольких идентичных запросов с помощью этого метода такой же, как эффект для одного такого запроса. Из методов запроса, определенных в этой спецификации, PUT, DELETE и безопасные методы запроса являются идемпотентными.
Идемпотентный HTTP-метод - это HTTP-метод, который можно вызывать многократно без разных результатов. Не имеет значения, если метод вызывается только один раз или десять раз. Результат должен быть таким же. 

11) Безопасные HTTP методы  -  
Некоторые HTTP-методы (например: HEAD, GET, OPTIONS и TRACE) определены как безопасные, это означает, что они предназначены только для получения информации и не должны изменять состояние сервера. Другими словами, они не должны иметь побочных эффектов, за исключением безобидных эффектов, таких как: логирование, кеширование, показ баннерной рекламы или увеличение веб-счетчика. Созданный произвольный GET-запрос, который не учитывает контекст состояния приложения, следует считать безопасным. По определению, безопасные операции идемпотентны, так как они приводят к одному и тому же результату на сервере.
МЕТОД  -  БЕЗОПАСНЫЙ/ИДЕМПОТЕНТНЫЙ
connect  -  -/-
delete  -  -/+
get  -  +/+
head  -  +/+
options  -  +/+
post  -  -/-
put  -  -/+
trace  -  +/+

12) Идентификация, Аутентификация, Авторизация  - 
Идентификация — это процедура распознавания субъекта по его идентификатору (проще говоря, это определение имени, логина или номера).Идентификация выполняется при попытке войти в какую-либо систему (например, в операционную систему или в сервис электронной почты).
Аутентификация – это процедура проверки подлинности (пользователя проверяют с помощью пароля, письмо проверяют по электронной подписи и т.д.)
Авторизация – это предоставление доступа к какому-либо ресурсу (например, к электронной почте). Когда определили ID, проверили подлинность, уже можно предоставить и доступ, то есть, выполнить авторизацию.

13) Что такое IP  - 
IP-адрес (Internet Protocol) — цифровой идентификатор, присваиваемый устройству, которое работает в условиях публичной или локальной сети на основе стека протоколов TCP/IP. Без него невозможно существование Интернета или какой-либо внутренней IP-сети.
IP-адрес – это строка чисел, разделенных точками. IP-адреса представляют собой набор из четырех чисел, например, 192.158.1.38. Каждое число в этом наборе принадлежит интервалу от 0 до 255. Таким образом, полный диапазон IP-адресации – это адреса от 0.0.0.0 до 255.255.255.255.
Сравнить IP-адрес можно с номером телефона или адресом дома – и тот, и тот указывают на объект. Как человек звонит собеседнику по номеру, так и компьютер обращается к другому устройству по IP-адресу.

14) Что такое октеты в DNS  - 
DNS (система доменных имен) преобразует доменные имена, удобные для человеческого восприятия (например, www.amazon.com), в IP-адреса, понимаемые машиной (например, 192.0.2.44).
Окте́т — восемь двоичных разрядов. В русском языке октет обычно называют байтом. Октет может принимать 256 возможных состояний (кодов, значений, комбинаций битов (нулей и единиц))
Слово «октет» часто употребляется при описании сетевых протоколов, так как они предназначены для взаимодействия компьютеров, имеющих не обязательно одинаковую платформу. В отличие от байта, который (в широком смысле) может быть равен 10, 12 и т. п. битам, октет всегда равен 8 битам.

15) Что такое порт, сколько портов у Linux сервера  - 
Порт - целое неотрицательное число, записываемое в заголовках протоколов транспортного уровня сетевой модели OSI (TCP, UDP, SCTP, DCCP)
Номер порта — это просто номер программы, которая будет обрабатывать переданные данные. Каждой сетевой программе, которая работает по протоколу TCP/IP, сопоставлен свой номер порта. Например, 80 — это порт WWW-сервера (обычно это Apache), a 53 — это порт системы доменных имен.
Для операционной системы Linux существуют 3 разных типа сетевых портов:
1.Хорошо известные порты (0-1023) – зарезервированы для операционной системы и основных сервисов.
2.Зарегистрированные порты (1024-49151) – которые могут использоваться приложениями, конкретными службами и пользователями.
3.Динамические и / или частные порты (49152-65535)
Хорошо известные порты перечислены в файле /etc/services в ОС.

16) Уровни OSI  - 
Модель OSI состоит из 7 уровней. Каждый уровень абстрагирован от других и ничего не знает о их существовании.
Модель функционирования сети назывется сетевая модель базовой эталонной модели взаимодействия открытых систем ISO/OSI. Кратко - модель OSI.
1.Физический
2.Канальный
3.Сетевой
4.Транспортный
5.Сеансовый
6.Представительский (Уровень представления)
7.Прикладной


17) Хедеры HTTP запросов  - 
Заголовки HTTP являются основной частью этих HTTP-запросов и ответов, и они несут информацию о браузере клиента, запрошенной странице, сервере и многом другом. Когда вы вводите URL-адрес в адресной строке, ваш браузер отправляет HTTP-запрос. Первая строка - это "Request Line", которая содержит некоторую базовую информацию по запросу. Остальные - HTTP заголовки.
После этого запроса ваш браузер получает ответ HTTP. Первая строка - это «Строка состояния», за которой следуют «HTTP-заголовки», до пустой строки. После этого начинается «содержимое».
Заголовки разделяются на четыре основных группы:
1.General Headers (рус. Общие заголовки) — используются в запросах и ответах. Должны включаться в любое сообщение клиента и сервера.
2.Request Headers (рус. Заголовки запроса) — используются только в запросах.
3.Response Headers (рус. Заголовки ответа) — используются только в ответах.
4.Entity Headers (рус. Заголовки сущности) — сопровождают каждую сущность сообщения. Используются в запросах и ответах.
